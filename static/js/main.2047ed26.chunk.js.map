{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","ApiServices/Api.js","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["Searchbar","state","query","handleChange","event","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","hits","onOpen","map","hit","data-img","largeImageURL","src","webformatURL","alt","onClick","id","ImageGallery","onOpenModal","apiKey","baseURL","Button","title","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","App","page","isLoading","showModal","reset","loadMore","scrollTo","top","document","documentElement","scrollHeight","behavior","searchHits","toggleModal","dataset","img","prevProps","prevState","fetch","then","res","json","fetchImages","result","console","log","finally","color","height","width","timeout","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2047ed26.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nclass Searchbar extends Component {\n  state = {\n    query: \"\",\n  };\n\n  handleChange = (event) => {\n    const { value } = event.currentTarget;\n    this.setState({\n      query: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.query);\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={this.handleChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.query}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","const ImageGalleryItem = ({ hits, onOpen }) => {\n  return hits.map((hit) => (\n    <li key={hit.id} className=\"ImageGalleryItem\">\n      <img\n        data-img={hit.largeImageURL}\n        src={hit.webformatURL}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n        onClick={onOpen}\n      />\n    </li>\n  ));\n};\nexport default ImageGalleryItem;\n","import ImageGalleryItem from \"./ImageGalleryItem\";\n\nconst ImageGallery = ({ hits, onOpenModal }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      <ImageGalleryItem hits={hits} onOpen={onOpenModal} />\n    </ul>\n  );\n};\nexport default ImageGallery;\n","\nconst apiKey = '20385561-6a350e58d651a37e998e9aef4'\nconst baseURL = 'https://pixabay.com/api'\n\nexport const  fetchImages = (query = '', page = 1) => {\n   return fetch(`${baseURL}/?q=${query}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`)\n    .then(res => res.json())\n}\n\n\n","const Button = ({ title, onClick }) => {\n  return (\n    <button className=\"Button\" onClick={onClick}>\n      {title}\n    </button>\n  );\n};\nexport default Button;\n","import { Component } from \"react\";\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (event) => {\n    if (event.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = (event) => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.src} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import \"./style.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Searchbar from \"./components/Searchbar/Searchbar.jsx\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery.jsx\";\nimport { fetchImages } from \"./ApiServices/Api\";\nimport { Component } from \"react\";\nimport Button from \"./components/Button/Button.jsx\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal/Modal.jsx\";\n\nclass App extends Component {\n  state = {\n    query: null,\n    hits: [],\n    page: 1,\n    isLoading: false,\n    showModal: false,\n    largeImageURL: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.searchHits();\n    }\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }\n\n  searchHits() {\n    const { query, hits, page } = this.state;\n    this.setState({ page: page + 1 });\n    this.setState({ isLoading: true });\n    fetchImages(query, page)\n      .then((result) => {\n        console.log(result.largeImageURL);\n        if (page === 1) {\n          this.setState({ hits: result.hits });\n        } else {\n          this.setState({ hits: [...hits, ...result.hits] });\n        }\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  }\n\n  handleSubmit = (query) => {\n    this.setState({ query: query });\n    this.reset()\n  };\n\n  loadMore = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n    this.searchHits();\n  };\n\n  reset = () => {\n    this.setState({ hits: [] });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onOpenModal = (event) => {\n    this.setState({\n      largeImageURL: event.target.dataset.img,\n    });\n    this.toggleModal();\n  };\n\n  render() {\n    const { hits, isLoading, showModal, largeImageURL } = this.state;\n\n    return (\n      <div className=\"main\">\n        <Searchbar onSubmit={this.handleSubmit} />\n        {isLoading ? (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        ) : null}\n        <ImageGallery hits={hits} onOpenModal={this.onOpenModal} />\n        {hits.length > 0 && (\n          <Button title=\"Load more\" onClick={this.loadMore} />\n        )}\n        {showModal && <Modal src={largeImageURL} onClose={this.toggleModal} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}